### Sets the initial size of the connection pool.
# default = 0
datasource.pool.initialSize = 6

### Sets the maximum total number of idle and borrows connections that can be active at the same time. Use a negative value for no limit.
# default = 8
datasource.pool.maxTotal = 32

### Sets the maximum number of connections that can remain idle in the pool. Excess idle connections are destroyed on return to the pool.
# default = 8
datasource.pool.maxIdle = 16

### Sets the minimum number of idle connections in the pool. The pool attempts to ensure that minIdle connections are available when the idle object evictor runs. The value of this property has no effect unless timeBetweenEvictionRunsMillis has a positive value.
# default = 0
datasource.pool.minIdle = 8

### Sets the MaxWaitMillis property. Use -1 to make the pool wait indefinitely.
# default = -1 (indefinitely)
datasource.pool.maxWaitMillis = 16000

### Sets the validationQuery.
# The SQL query that will be used to validate connections from this pool before returning them to the caller. If specified, this query does not have to return any data, it just can't throw a SQLException. The default value is null.
# datasource.pool.validationQuery = SELECT 1 FROM DUAL
datasource.pool.validationQuery = SELECT 1

### Sets the testWhileIdle property. This property determines whether or not the idle object will validate connections.
# NOTE - for a true value to have any effect, the validationQuery parameter must be set to a non-null string. The default value is false and this property has to be set in order for the pool cleaner/test thread is to run.
datasource.pool.testWhileIdle = true

### JDBC driver class name
 jdbc.driver = org.postgresql.Driver
# jdbc.driver = oracle.jdbc.driver.â€‹OracleDriver
# jdbc.driver = com.mysql.jdbc.Driver
# jdbc.driver = org.h2.Driver

### JDBC url for the database
# jdbc.url = jdbc:mysql://host:3306/database
# jdbc.url = jdbc:oracle:thin:@//host:1521/xe
 jdbc.url = jdbc:postgresql://localhost:5432/walmart-logistics
# jdbc.url = jdbc:h2:~/test;

# Database username
 jdbc.username = postgres

# Database password
 jdbc.password = postgres

# JPA database string (defines the database)
# jpa.database = DEFAULT
# jpa.database = DB2
# jpa.database = DERBY
# jpa.database = H2
# jpa.database = HSQL
# jpa.database = INFORMIX
# jpa.database = MYSQL
# jpa.database = ORACLE
 jpa.database = POSTGRESQL
# jpa.database = SQL_SERVER
# jpa.database = SYBASE

# Shows SQL in console (boolean)
jpa.showSql = true

# Format SQL for readability (boolean)
jpa.formatSql = true

# DDL Generation
jpa.generateDdl = true

# JPA entites package scanner
jpa.scannerBasePackage = challange.walmart.model